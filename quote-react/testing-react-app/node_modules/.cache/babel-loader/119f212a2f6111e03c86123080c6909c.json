{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{Stack}from'@mui/material';import React,{useState,useEffect}from'react';import{Outlet}from'react-router-dom';import RandomNumber from'./../../Actions/RandomNumber';import{ColorButton,QuoteItem,MyBox}from'../../Style/styles';import UserService from'./../../services/user.service';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function RandomQuote(){var _useState=useState([]),_useState2=_slicedToArray(_useState,1),history=_useState2[0];var _useState3=useState(history.length),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];var rand=RandomNumber.getRandomNum();var _useState5=useState({author:'',quoted:'',category:''}),_useState6=_slicedToArray(_useState5,2),quoteData=_useState6[0],setQuoteData=_useState6[1];var ident=\"ID\"+rand;var isMounted=false;function GetQuotes(){return _GetQuotes.apply(this,arguments);}function _GetQuotes(){_GetQuotes=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var identifier;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return UserService.getRandomQuote(ident);case 2:identifier=_context4.sent;setQuoteData({author:identifier.data.quoteAuthor,quoted:identifier.data.quoted,category:identifier.data.quoteCategory});history.push({author:identifier.data.quoteAuthor,quoted:identifier.data.quoted,category:identifier.data.quoteCategory});setCount(history.length-2);case 6:case\"end\":return _context4.stop();}}},_callee4);}));return _GetQuotes.apply(this,arguments);}useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isMounted){GetQuotes();}case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);var prevIndex=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(count>0){setCount(count-1);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function prevIndex(){return _ref.apply(this,arguments);};}();var prevQuote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(history.length>1){// console.log(history.length);\nsetQuoteData(history[count]);prevIndex();}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function prevQuote(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[isMounted=true,/*#__PURE__*/_jsxs(MyBox,{sx:{boxShadow:5,borderRadius:10},children:[GetQuotes,/*#__PURE__*/_jsxs(Stack,{direction:\"row\",justifyContent:\"start\",children:[/*#__PURE__*/_jsx(ColorButton,{onClick:GetQuotes,children:\"Next Quote\"}),/*#__PURE__*/_jsx(ColorButton,{onClick:prevQuote,children:\"Previous Quote\"})]}),/*#__PURE__*/_jsxs(QuoteItem,{variant:\"contained\",children:[/*#__PURE__*/_jsx(\"span\",{class:\"author-span\",style:{color:'slateBlue'},children:quoteData.author}),/*#__PURE__*/_jsx(\"br\",{}),quoteData.quoted,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{class:\"category-span\",style:{color:'coral'},children:quoteData.category})]})]}),/*#__PURE__*/_jsx(Outlet,{})]});}","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Component/QuoteManagement/RandomQuote.js"],"names":["Stack","React","useState","useEffect","Outlet","RandomNumber","ColorButton","QuoteItem","MyBox","UserService","RandomQuote","history","length","count","setCount","rand","getRandomNum","author","quoted","category","quoteData","setQuoteData","ident","isMounted","GetQuotes","getRandomQuote","identifier","data","quoteAuthor","quoteCategory","push","fetchData","prevIndex","prevQuote","boxShadow","borderRadius","color"],"mappings":"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","sourcesContent":["import { Stack } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport RandomNumber from './../../Actions/RandomNumber';\r\nimport { ColorButton, QuoteItem, MyBox } from '../../Style/styles';\r\nimport UserService from './../../services/user.service';\r\n\r\nexport default function RandomQuote() {\r\n    const [history] = useState([]);\r\n    const [count, setCount] = useState(history.length);\r\n    const rand = RandomNumber.getRandomNum();\r\n    const [quoteData, setQuoteData] = useState({ author: '', quoted: '', category: '' });\r\n    const ident = \"ID\" + rand;\r\n    let isMounted = false;\r\n\r\n    async function GetQuotes() {\r\n        const identifier = await UserService.getRandomQuote(ident);\r\n        setQuoteData({ author: identifier.data.quoteAuthor, quoted: identifier.data.quoted, category: identifier.data.quoteCategory });\r\n        history.push({\r\n            author: identifier.data.quoteAuthor, quoted: identifier.data.quoted, category: identifier.data.quoteCategory\r\n        });\r\n        setCount(history.length - 2);\r\n    }\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (isMounted) {\r\n                GetQuotes();\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    const prevIndex = async () => {\r\n        if (count > 0) {\r\n            setCount(count - 1);\r\n        }\r\n    }\r\n    const prevQuote = async () => {\r\n        if (history.length > 1) {\r\n            // console.log(history.length);\r\n            setQuoteData(history[count]);\r\n            prevIndex();\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {isMounted = true}\r\n            <MyBox sx={{\r\n                boxShadow: 5,\r\n                borderRadius: 10,\r\n               \r\n                \r\n            }}>\r\n                {GetQuotes}\r\n                <Stack direction=\"row\"\r\n                    justifyContent=\"start\"\r\n                >\r\n                    <ColorButton onClick={GetQuotes}>Next Quote</ColorButton>\r\n                    <ColorButton onClick={prevQuote}>Previous Quote</ColorButton>\r\n                </Stack>\r\n                {/* <QuoteItem> */}\r\n                <QuoteItem variant='contained'>\r\n                    <span class='author-span' style={{ color: 'slateBlue' }}>{quoteData.author}</span>\r\n                    <br />\r\n                    {quoteData.quoted}\r\n                    <br />\r\n                    <span class='category-span' style={{ color: 'coral' }}>\r\n                        {quoteData.category}\r\n                    </span>\r\n                </QuoteItem>\r\n                {/* <QuoteItem variant='contained' sx={{ fontFamily: 'Caveat', fontSize: '2.5rem', p: 0 }}>{quoteData.quoted}</QuoteItem>\r\n                    <QuoteItem variant='contained' sx={{ color: 'lightpink', fontSize: '1.5rem' }}>{quoteData.category}</QuoteItem> */}\r\n                {/* </QuoteItem> */}\r\n            </MyBox>\r\n            <Outlet />\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}