{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\src\\\\Component\\\\RandomQuote.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, CssBaseline, Button, Paper, styled, Stack } from '@mui/material';\nimport { useState } from 'react'; // import 'C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/App.css';\n\nimport NavButtons from './NavButtons'; // import RandomNumber from '../Actions/RandomNumber';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: 'oldlace',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    display: 'flex',\n    fontFamily: 'Satisfy',\n    color: 'slateblue',\n    fontSize: '200%',\n    maxWidth: \"800%\"\n  };\n}); // const QuoteStack = styled(Stack)(({ theme }) => ({\n//     direction: 'column',\n//     spacing: 5,\n//     marginBottom: '5vh',\n// }));\n// const ItemQuote = styled(Paper)(({ theme }) => ({\n//     backgroundColor: 'oldlace',\n//     ...theme.typography.body2,\n//     padding: theme.spacing(2),\n//     display: 'flex',\n//     textAlign: 'left',\n//     justifyContent: 'center',\n//     fontFamily: 'Caveat',\n//     color: 'darkslategrey',\n//     fontSize: '250%',\n//     fontWeight: 'bold',\n//     maxWidth: '800%',\n//     square: true,\n//     p: 0\n// }));\n\n_c = Item;\nconst ColorButton = styled(Button)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    color: 'black',\n    font: 'bold',\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    fontFamily: 'Bitter',\n    backgroundColor: \"seagreen\",\n    '&:hover': {\n      backgroundColor: \"darkgreen\"\n    }\n  };\n});\n_c2 = ColorButton;\n\nfunction RandomNumber() {\n  const min = 1;\n  const max = 37489;\n  const rand = Math.floor(Math.random() * (max - min)) + min;\n  return rand;\n}\n\n_c3 = RandomNumber;\nexport default function RandomQuote() {\n  _s();\n\n  const axios = require('axios');\n\n  const [quote, setQuote] = useState(['Welcome to the Quote Machine']);\n  const [author, setAuthor] = useState(['By Loel Nelson']);\n  const rand = RandomNumber();\n\n  async function GetQuotes() {\n    const ident = \"ID\" + rand;\n    let identifier = await axios.get(`/api/quote/${ident}`); // eslint-disable-next-line\n\n    const quoteList = new Array();\n    quoteList.push(identifier.data.quoteAuthor);\n    quoteList.push(identifier.data.quoted);\n    displayQuote(\"\\\"\" + quoteList[1] + \"\\\"\", quoteList[0]);\n  }\n\n  function displayQuote(theQuote, theAuthor) {\n    setQuote(theQuote);\n    setAuthor(theAuthor);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'rgb(0, 206, 209,.3)',\n        boxShadow: 3,\n        borderRadius: 2,\n        p: 2,\n        minWidth: 300,\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"flex-end\",\n        spacing: 32,\n        children: /*#__PURE__*/_jsxDEV(ColorButton, {\n          onClick: GetQuotes,\n          children: \"Next Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: true,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          variant: \"contained\",\n          sx: {\n            fontFamily: 'Caveat',\n            color: 'darkslategrey',\n            fontSize: 40,\n            fontWeight: 'bold',\n            width: 800,\n            p: 0\n          },\n          children: quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          variant: \"contained\",\n          sx: {\n            fontFamily: 'Bitter',\n            fontWeight: 'bold',\n            color: 'slateblue',\n            fontSize: 28,\n            width: 800,\n            p: 10\n          },\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RandomQuote, \"iA3drvTtoUxYuIWaR4Yeedlj0ng=\");\n\n_c4 = RandomQuote;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ColorButton\");\n$RefreshReg$(_c3, \"RandomNumber\");\n$RefreshReg$(_c4, \"RandomQuote\");","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Component/RandomQuote.js"],"names":["React","Box","CssBaseline","Button","Paper","styled","Stack","useState","NavButtons","Item","theme","backgroundColor","typography","body2","padding","spacing","display","fontFamily","color","fontSize","maxWidth","ColorButton","font","fontWeight","RandomNumber","min","max","rand","Math","floor","random","RandomQuote","axios","require","quote","setQuote","author","setAuthor","GetQuotes","ident","identifier","get","quoteList","Array","push","data","quoteAuthor","quoted","displayQuote","theQuote","theAuthor","bgcolor","boxShadow","borderRadius","p","minWidth","justifyContent","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Box, CssBaseline, Button, Paper, styled, Stack } from '@mui/material';\r\nimport { useState } from 'react';\r\n// import 'C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/App.css';\r\nimport NavButtons from './NavButtons';\r\n// import RandomNumber from '../Actions/RandomNumber';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: 'oldlace',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    fontFamily: 'Satisfy',\r\n    color: 'slateblue',\r\n    fontSize: '200%',\r\n    maxWidth: \"800%\",\r\n}));\r\n// const QuoteStack = styled(Stack)(({ theme }) => ({\r\n//     direction: 'column',\r\n//     spacing: 5,\r\n//     marginBottom: '5vh',\r\n\r\n\r\n// }));\r\n// const ItemQuote = styled(Paper)(({ theme }) => ({\r\n//     backgroundColor: 'oldlace',\r\n//     ...theme.typography.body2,\r\n//     padding: theme.spacing(2),\r\n//     display: 'flex',\r\n//     textAlign: 'left',\r\n//     justifyContent: 'center',\r\n//     fontFamily: 'Caveat',\r\n//     color: 'darkslategrey',\r\n//     fontSize: '250%',\r\n//     fontWeight: 'bold',\r\n//     maxWidth: '800%',\r\n//     square: true,\r\n//     p: 0\r\n// }));\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: 'black',\r\n    font: 'bold',\r\n    fontSize: '1.5rem',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Bitter',\r\n    backgroundColor: \"seagreen\",\r\n    '&:hover': {\r\n        backgroundColor: \"darkgreen\",\r\n    },\r\n}));\r\nfunction RandomNumber() {\r\n    const min = 1;\r\n    const max = 37489;\r\n    const rand = Math.floor(Math.random() * (max - min)) + min;\r\n    return (rand);\r\n}\r\nexport default function RandomQuote() {\r\n    const axios = require('axios');\r\n    const [quote, setQuote] = useState(['Welcome to the Quote Machine']);\r\n    const [author, setAuthor] = useState(['By Loel Nelson']);\r\n    const rand = RandomNumber();\r\n\r\n    async function GetQuotes() {\r\n\r\n        const ident = \"ID\" + rand;\r\n        let identifier = await axios.get(`/api/quote/${ident}`);\r\n        // eslint-disable-next-line\r\n        const quoteList = new Array();\r\n        quoteList.push(identifier.data.quoteAuthor);\r\n        quoteList.push(identifier.data.quoted);\r\n        displayQuote(\"\\\"\" + quoteList[1] + \"\\\"\", quoteList[0]);\r\n\r\n    }\r\n    function displayQuote(theQuote, theAuthor) {\r\n        setQuote(theQuote);\r\n        setAuthor(theAuthor);\r\n    }\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Box sx={{\r\n                bgcolor: 'rgb(0, 206, 209,.3)',\r\n                boxShadow: 3,\r\n                borderRadius: 2,\r\n                p: 2,\r\n                minWidth: 300,\r\n                justifyContent: 'center',\r\n            }}>\r\n                <Stack direction=\"row\"\r\n                    justifyContent=\"flex-end\"\r\n                    spacing={32}>\r\n                    <ColorButton onClick={GetQuotes}>Next Quote</ColorButton>\r\n                </Stack>\r\n                <Stack\r\n                    direction=\"column\"\r\n                    spacing>\r\n                    <Item variant='contained' sx={{ fontFamily: 'Caveat', color: 'darkslategrey', fontSize: 40, fontWeight: 'bold', width: 800, p: 0 }}>{quote}</Item>\r\n                    <Item variant='contained' sx={{ fontFamily: 'Bitter', fontWeight: 'bold', color: 'slateblue', fontSize: 28, width: 800, p: 10 }}>{author}</Item>\r\n                    <br />\r\n                </Stack>\r\n            </Box>\r\n            <NavButtons />\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}