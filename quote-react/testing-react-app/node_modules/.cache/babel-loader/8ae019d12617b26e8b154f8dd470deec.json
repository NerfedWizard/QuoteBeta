{"ast":null,"code":"import _objectSpread from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState}from'react';import{Stack,styled,Autocomplete,TextField}from'@mui/material';import{ColorButton,QuoteItem,MyBox}from'./../../Style/styles';import UserService from'./../../services/user.service';import{Outlet}from'react-router-dom';import RandomNumber from'./../../Actions/RandomNumber';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CustomAutoComplete=styled(Autocomplete)(function(_ref){var theme=_ref.theme;return{color:\"cyan\",backgroundColor:\"azure\",maxWidth:575,minWidth:300,fontWeight:'bold',fontFamily:'Caveat','&:hover':{backgroundColor:\"lightgreen\"}};});export default function SelectVariants(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),choice=_useState2[0],setChoice=_useState2[1];var _useState3=useState([{}]),_useState4=_slicedToArray(_useState3,1),history=_useState4[0];var _useState5=useState(history.length),_useState6=_slicedToArray(_useState5,2),count=_useState6[0],setCount=_useState6[1];var _useState7=useState({quote:'',author:'Choose a Category'}),_useState8=_slicedToArray(_useState7,2),quotes=_useState8[0],setQuotes=_useState8[1];var handleClick=function handleClick(event){GetQuoteByCategory(choice);};function GetQuoteByCategory(_x){return _GetQuoteByCategory.apply(this,arguments);}function _GetQuoteByCategory(){_GetQuoteByCategory=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var category,num;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return UserService.getQuoteByCategory(event);case 2:category=_context3.sent;num=RandomNumber.getRandomNumSet(category.data.length);setQuotes(_objectSpread(_objectSpread({},quotes),{},{quote:category.data[num].quoted,author:category.data[num].quoteAuthor}));history.push(_objectSpread(_objectSpread({},quotes),{},{quote:category.data[num].quoted,author:category.data[num].quoteAuthor}));setCount(history.length-2);case 7:case\"end\":return _context3.stop();}}},_callee3);}));return _GetQuoteByCategory.apply(this,arguments);}var prevIndex=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(count>0){setCount(count-1);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function prevIndex(){return _ref2.apply(this,arguments);};}();var prevQuote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(history.length>1){setQuotes(history[count]);prevIndex();}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function prevQuote(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MyBox,{sx:{boxShadow:5,borderRadius:10},children:[/*#__PURE__*/_jsxs(Stack,{spacing:2,direction:\"row\",justifyContent:\"flex-start\",children:[/*#__PURE__*/_jsx(CustomAutoComplete,{value:choice,onChange:function onChange(event,newChoice){setChoice(newChoice);GetQuoteByCategory(newChoice);},isOptionEqualToValue:function isOptionEqualToValue(option,value){return option.value===value.value;},selectOnFocus:true,options:qCategory.sort(),renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Category\",variant:\"standard\"}));},sx:{borderRadius:2}}),/*#__PURE__*/_jsx(ColorButton,{onClick:handleClick,sx:{p:0},children:\" Next Quote\"}),/*#__PURE__*/_jsx(ColorButton,{onClick:prevQuote,children:\"Previous Quote\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(QuoteItem,{variant:\"contained\",children:[/*#__PURE__*/_jsx(\"span\",{class:\"author-span\",style:{color:'slateBlue'},children:quotes.author}),/*#__PURE__*/_jsx(\"br\",{}),quotes.quote]}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"space-evenly\",alignItems:\"center\",spacing:5})]}),/*#__PURE__*/_jsx(Outlet,{})]});}var qCategory=['life','love','inspiration','humor','wildcard','soul','truth','poetry','wisdom','friendship','happiness','books','romance','writing','success','hope','arts','education','motivation','death','faith','philosophy','mind','god','funny','relationship','religion','science','knowledge','quotes','purpose','positive','dad'];","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Component/QuoteManagement/CategorySelect.js"],"names":["useState","Stack","styled","Autocomplete","TextField","ColorButton","QuoteItem","MyBox","UserService","Outlet","RandomNumber","CustomAutoComplete","theme","color","backgroundColor","maxWidth","minWidth","fontWeight","fontFamily","SelectVariants","choice","setChoice","history","length","count","setCount","quote","author","quotes","setQuotes","handleClick","event","GetQuoteByCategory","getQuoteByCategory","category","num","getRandomNumSet","data","quoted","quoteAuthor","push","prevIndex","prevQuote","boxShadow","borderRadius","newChoice","option","value","qCategory","sort","params","p"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Stack, styled, Autocomplete, TextField } from '@mui/material';\r\nimport { ColorButton, QuoteItem, MyBox } from './../../Style/styles';\r\nimport UserService from './../../services/user.service';\r\nimport { Outlet } from 'react-router-dom';\r\nimport RandomNumber from './../../Actions/RandomNumber';\r\n\r\n\r\nconst CustomAutoComplete = styled(Autocomplete)(({ theme }) => ({\r\n    color: \"cyan\",\r\n    backgroundColor: \"azure\",\r\n    maxWidth: 575,\r\n    minWidth: 300,\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Caveat',\r\n    '&:hover': {\r\n        backgroundColor: \"lightgreen\",\r\n    },\r\n}));\r\n\r\nexport default function SelectVariants() {\r\n    const [choice, setChoice] = useState('');\r\n    const [history] = useState([{}]);\r\n    const [count, setCount] = useState(history.length);\r\n    const [quotes, setQuotes] = useState({ quote: '', author: 'Choose a Category' });\r\n   \r\n    const handleClick = (event) => {\r\n        GetQuoteByCategory(choice);\r\n    };\r\n    async function GetQuoteByCategory(event) {\r\n        let category = await UserService.getQuoteByCategory(event);\r\n        const num = RandomNumber.getRandomNumSet(category.data.length);\r\n        setQuotes({\r\n            ...quotes, quote: category.data[num].quoted, author: category.data[num].quoteAuthor\r\n        });\r\n        history.push({\r\n            ...quotes, quote: category.data[num].quoted, author: category.data[num].quoteAuthor\r\n        })\r\n        setCount(history.length - 2);\r\n    }\r\n    const prevIndex = async () => {\r\n        if (count > 0) {\r\n            setCount(count - 1);\r\n        }\r\n    }\r\n    const prevQuote = async () => {\r\n        if (history.length > 1) {\r\n            setQuotes(history[count]);\r\n            prevIndex();\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <MyBox sx={{\r\n                boxShadow: 5,\r\n                borderRadius: 10,\r\n            }}>\r\n                <Stack spacing={2} direction=\"row\" justifyContent=\"flex-start\" >\r\n                    <CustomAutoComplete\r\n                        value={choice}\r\n                        onChange={(event, newChoice) => {\r\n                            setChoice(newChoice);\r\n                            GetQuoteByCategory(newChoice);\r\n                        }}\r\n                        isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                        selectOnFocus\r\n                        options={qCategory.sort()}\r\n                        renderInput={(params) => <TextField {...params} label=\"Category\" variant=\"standard\" />}\r\n                        sx={{ borderRadius: 2 }}\r\n                    />\r\n                    <ColorButton onClick={handleClick} sx={{ p: 0 }}> Next Quote</ColorButton>\r\n                    <ColorButton onClick={prevQuote}>Previous Quote</ColorButton>\r\n                </Stack>\r\n                <br />\r\n                \r\n                <QuoteItem variant='contained'>\r\n                    <span class='author-span' style={{ color: 'slateBlue' }}>{quotes.author}</span>\r\n                    <br />\r\n                    {quotes.quote}\r\n                </QuoteItem>\r\n                \r\n                <Stack direction=\"row\"\r\n                    justifyContent=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                    spacing={5}>\r\n                    \r\n                </Stack>\r\n            </MyBox>\r\n            <Outlet />\r\n        </>\r\n    );\r\n}\r\nconst qCategory = [\r\n    'life',\r\n    'love',\r\n    'inspiration',\r\n    'humor',\r\n    'wildcard',\r\n    'soul',\r\n    'truth',\r\n    'poetry',\r\n    'wisdom',\r\n    'friendship',\r\n    'happiness',\r\n    'books',\r\n    'romance',\r\n    'writing',\r\n    'success',\r\n    'hope',\r\n    'arts',\r\n    'education',\r\n    'motivation',\r\n    'death',\r\n    'faith',\r\n    'philosophy',\r\n    'mind',\r\n    'god',\r\n    'funny',\r\n    'relationship',\r\n    'religion',\r\n    'science',\r\n    'knowledge',\r\n    'quotes',\r\n    'purpose',\r\n    'positive',\r\n    'dad',\r\n];"]},"metadata":{},"sourceType":"module"}