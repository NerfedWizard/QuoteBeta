{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/quote/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/quote/users/login\", LoginRequest); // extract token from res.data\n\n    const {\n      token\n    } = res.data; // store the token in the localStorage\n\n    localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n    setJWTToken(token); // decode token on React\n\n    const decoded = jwt_decode(token); // dispatch to our securityReducer\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Actions/securityActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setJWTToken","jwt_decode","createNewUser","newUser","history","dispatch","post","push","type","payload","err","response","data","login","LoginRequest","res","token","localStorage","setItem","decoded","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAOC,QAAP,IAAoB;AACnE,MAAI;AACA,UAAMR,KAAK,CAACS,IAAN,CAAW,2BAAX,EAAwCH,OAAxC,CAAN;AACAC,IAAAA,OAAO,CAACG,IAAR,CAAa,QAAb;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,UADD;AAELW,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACVL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,UADD;AAELW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH;AACJ,CAdM;AAeP,OAAO,MAAMC,KAAK,GAAIC,YAAD,IAAkB,MAAOT,QAAP,IAAoB;AACvD,MAAI;AACA;AACA,UAAMU,GAAG,GAAG,MAAMlB,KAAK,CAACS,IAAN,CAAW,wBAAX,EAAqCQ,YAArC,CAAlB,CAFA,CAGA;;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAYD,GAAG,CAACH,IAAtB,CAJA,CAKA;;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EANA,CAOA;;AACAhB,IAAAA,WAAW,CAACgB,KAAD,CAAX,CARA,CASA;;AACA,UAAMG,OAAO,GAAGlB,UAAU,CAACe,KAAD,CAA1B,CAVA,CAWA;;AACAX,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,gBADD;AAELU,MAAAA,OAAO,EAAEU;AAFJ,KAAD,CAAR;AAIH,GAhBD,CAgBE,OAAOT,GAAP,EAAY;AACVL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,UADD;AAELW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH;AACJ,CAvBM;AAwBP,OAAO,MAAMQ,MAAM,GAAG,MAAOf,QAAD,IAAc;AACtCY,EAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB;AACArB,EAAAA,WAAW,CAAC,KAAD,CAAX;AACAK,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAET,gBADD;AAELU,IAAAA,OAAO,EAAE;AAFJ,GAAD,CAAR;AAIH,CAPM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n    try {\r\n        await axios.post(\"/api/quote/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {},\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data,\r\n        });\r\n    }\r\n};\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n    try {\r\n        // post => Login Request\r\n        const res = await axios.post(\"/api/quote/users/login\", LoginRequest);\r\n        // extract token from res.data\r\n        const { token } = res.data;\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // set our token in header ***\r\n        setJWTToken(token);\r\n        // decode token on React\r\n        const decoded = jwt_decode(token);\r\n        // dispatch to our securityReducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data,\r\n        });\r\n    }\r\n};\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {},\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}