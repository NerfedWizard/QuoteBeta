{"ast":null,"code":"import axios from\"axios\";// import useStore from \"./store\";\nvar API_URL=\"api/quote/users/\";var register=function register(newUser){return axios.post(API_URL+'register',newUser);};var login=function login(user){return axios.post(API_URL+'login',user).then(function(response){if(response.data.token){localStorage.setItem(\"user\",JSON.stringify(response.data));}return response.data;});};var logout=function logout(){localStorage.removeItem(\"user\");};var getCurrentUser=function getCurrentUser(){return JSON.parse(localStorage.getItem(\"user\"));};var AuthService={register:register,login:login,logout:logout,getCurrentUser:getCurrentUser};export default AuthService;","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/services/auth.service.js"],"names":["axios","API_URL","register","newUser","post","login","user","then","response","data","token","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","AuthService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AAEA,GAAMC,CAAAA,OAAO,CAAG,kBAAhB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,OAAD,CAAa,CAC1B,MAAOH,CAAAA,KAAK,CAACI,IAAN,CAAWH,OAAO,CAAG,UAArB,CAAiCE,OAAjC,CAAP,CACH,CAFD,CAIA,GAAME,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,IAAD,CAAU,CACpB,MAAON,CAAAA,KAAK,CACPI,IADE,CACGH,OAAO,CAAG,OADb,CACsBK,IADtB,EAEFC,IAFE,CAEG,SAACC,QAAD,CAAc,CAChB,GAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,CAAyB,CACrBC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B,EACH,CACD,MAAOD,CAAAA,QAAQ,CAACC,IAAhB,CACH,CAPE,CAAP,CAQH,CATD,CAWA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBJ,YAAY,CAACK,UAAb,CAAwB,MAAxB,EACH,CAFD,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,MAAOJ,CAAAA,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,CAChBlB,QAAQ,CAARA,QADgB,CAEhBG,KAAK,CAALA,KAFgB,CAGhBU,MAAM,CAANA,MAHgB,CAIhBE,cAAc,CAAdA,cAJgB,CAApB,CAOA,cAAeG,CAAAA,WAAf","sourcesContent":["import axios from \"axios\";\r\n// import useStore from \"./store\";\r\n\r\nconst API_URL = \"api/quote/users/\";\r\n\r\nconst register = (newUser) => {\r\n    return axios.post(API_URL + 'register', newUser);\r\n};\r\n\r\nconst login = (user) => {\r\n    return axios\r\n        .post(API_URL + 'login', user)\r\n        .then((response) => {\r\n            if (response.data.token) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n            return response.data;\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst AuthService = {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n};\r\n\r\nexport default AuthService;"]},"metadata":{},"sourceType":"module"}