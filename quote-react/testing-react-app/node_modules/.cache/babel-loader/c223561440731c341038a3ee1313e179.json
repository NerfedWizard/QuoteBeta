{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\src\\\\SecurityUtils\\\\SecureRoute.js\";\nimport React from \"react\";\nimport { Routes, Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecureRoute = _ref => {\n  let {\n    component: Component,\n    security,\n    ...otherProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...otherProps,\n    render: props => security.validToken === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/loginsuccess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SecureRoute;\nSecureRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecureRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"SecureRoute\");","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/SecurityUtils/SecureRoute.js"],"names":["React","Routes","Navigate","connect","PropTypes","SecureRoute","component","Component","security","otherProps","props","validToken","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,QAAxB;AAAkC,OAAGC;AAArC,GAAD;AAAA,sBAChB,QAAC,KAAD,OACQA,UADR;AAEI,IAAA,MAAM,EAAGC,KAAD,IACJF,QAAQ,CAACG,UAAT,KAAwB,IAAxB,gBACI,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,gBAGI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,CAApB;;KAAML,W;AAaNA,WAAW,CAACO,SAAZ,GAAwB;AACpBJ,EAAAA,QAAQ,EAAEJ,SAAS,CAACS,MAAV,CAAiBC;AADP,CAAxB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCR,EAAAA,QAAQ,EAAEQ,KAAK,CAACR;AADgB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBV,WAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Routes, Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route\r\n        {...otherProps}\r\n        render={(props) =>\r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Navigate to=\"/loginsuccess\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n    security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecureRoute);"]},"metadata":{},"sourceType":"module"}