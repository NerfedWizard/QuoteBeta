{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\src\\\\Component\\\\RandomQuote.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, CssBaseline, Button, Paper, styled, Stack } from '@mui/material';\nimport { useState } from 'react'; // import 'C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/App.css';\n\nimport NavButtons from './NavButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: 'oldlace',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    display: 'flex',\n    fontFamily: 'Satisfy',\n    color: 'slateblue',\n    fontSize: '200%',\n    maxWidth: \"800%\"\n  };\n});\n_c = Item;\nconst QuoteStack = styled(Stack)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    direction: 'column',\n    spacing: 5,\n    marginBottom: '5vh'\n  };\n});\n_c2 = QuoteStack;\nconst ItemQuote = styled(Paper)(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    backgroundColor: 'oldlace',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    display: 'flex',\n    textAlign: 'left',\n    justifyContent: 'center',\n    fontFamily: 'Caveat',\n    color: 'darkslategrey',\n    fontSize: '250%',\n    fontWeight: 'bold',\n    maxWidth: '800%',\n    square: true,\n    p: 0\n  };\n});\n_c3 = ItemQuote;\nconst ColorButton = styled(Button)(_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return {\n    color: 'black',\n    font: 'bold',\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    fontFamily: 'Bitter',\n    backgroundColor: \"seagreen\",\n    '&:hover': {\n      backgroundColor: \"darkgreen\"\n    }\n  };\n});\n_c4 = ColorButton;\nexport default function RandomQuote() {\n  _s();\n\n  const axios = require('axios');\n\n  const [quote, setQuote] = useState(['Welcome to the Quote Machine']);\n  const [author, setAuthor] = useState(['By Loel Nelson']);\n  const min = 1;\n  const max = 37489;\n  const rand = Math.floor(Math.random() * (max - min)) + min;\n\n  async function GetQuotes() {\n    const ident = \"ID\" + rand;\n    let identifier = await axios.get(`/api/quote/${ident}`); // eslint-disable-next-line\n\n    const quoteList = new Array();\n    quoteList.push(identifier.data.quoteAuthor);\n    quoteList.push(identifier.data.quoted);\n    displayQuote(\"\\\"\" + quoteList[1] + \"\\\"\", quoteList[0]);\n  }\n\n  function displayQuote(theQuote, theAuthor) {\n    setQuote(theQuote);\n    setAuthor(theAuthor);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'rgb(0,0,0,.6)',\n        boxShadow: 3,\n        borderRadius: 2,\n        p: 2,\n        minWidth: 300,\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"flex-end\",\n        spacing: 32,\n        children: /*#__PURE__*/_jsxDEV(ColorButton, {\n          onClick: GetQuotes,\n          children: \"Next Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QuoteStack, {\n        children: [/*#__PURE__*/_jsxDEV(ItemQuote, {\n          variant: \"contained\",\n          children: quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          variant: \"contained\",\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RandomQuote, \"iA3drvTtoUxYuIWaR4Yeedlj0ng=\");\n\n_c5 = RandomQuote;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"QuoteStack\");\n$RefreshReg$(_c3, \"ItemQuote\");\n$RefreshReg$(_c4, \"ColorButton\");\n$RefreshReg$(_c5, \"RandomQuote\");","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Component/RandomQuote.js"],"names":["React","Box","CssBaseline","Button","Paper","styled","Stack","useState","NavButtons","Item","theme","backgroundColor","typography","body2","padding","spacing","display","fontFamily","color","fontSize","maxWidth","QuoteStack","direction","marginBottom","ItemQuote","textAlign","justifyContent","fontWeight","square","p","ColorButton","font","RandomQuote","axios","require","quote","setQuote","author","setAuthor","min","max","rand","Math","floor","random","GetQuotes","ident","identifier","get","quoteList","Array","push","data","quoteAuthor","quoted","displayQuote","theQuote","theAuthor","bgcolor","boxShadow","borderRadius","minWidth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Box, CssBaseline, Button, Paper, styled, Stack } from '@mui/material';\r\nimport { useState } from 'react';\r\n// import 'C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/App.css';\r\nimport NavButtons from './NavButtons';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: 'oldlace',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    fontFamily: 'Satisfy',\r\n    color: 'slateblue',\r\n    fontSize: '200%',\r\n    maxWidth: \"800%\",\r\n}));\r\nconst QuoteStack = styled(Stack)(({ theme }) => ({\r\n    direction: 'column',\r\n    spacing: 5,\r\n    marginBottom: '5vh',\r\n\r\n\r\n}));\r\nconst ItemQuote = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: 'oldlace',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    textAlign: 'left',\r\n    justifyContent: 'center',\r\n    fontFamily: 'Caveat',\r\n    color: 'darkslategrey',\r\n    fontSize: '250%',\r\n    fontWeight: 'bold',\r\n    maxWidth: '800%',\r\n    square: true,\r\n    p: 0\r\n}));\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: 'black',\r\n    font: 'bold',\r\n    fontSize: '1.5rem',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Bitter',\r\n    backgroundColor: \"seagreen\",\r\n    '&:hover': {\r\n        backgroundColor: \"darkgreen\",\r\n    },\r\n}));\r\nexport default function RandomQuote() {\r\n    const axios = require('axios');\r\n    const [quote, setQuote] = useState(['Welcome to the Quote Machine']);\r\n    const [author, setAuthor] = useState(['By Loel Nelson']);\r\n    const min = 1;\r\n    const max = 37489;\r\n    const rand = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n\r\n\r\n    async function GetQuotes() {\r\n\r\n        const ident = \"ID\" + rand;\r\n        let identifier = await axios.get(`/api/quote/${ident}`);\r\n        // eslint-disable-next-line\r\n        const quoteList = new Array();\r\n        quoteList.push(identifier.data.quoteAuthor);\r\n        quoteList.push(identifier.data.quoted);\r\n        displayQuote(\"\\\"\" + quoteList[1] + \"\\\"\", quoteList[0]);\r\n\r\n    }\r\n    function displayQuote(theQuote, theAuthor) {\r\n        setQuote(theQuote);\r\n        setAuthor(theAuthor);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Box sx={{\r\n                bgcolor: 'rgb(0,0,0,.6)',\r\n                boxShadow: 3,\r\n                borderRadius: 2,\r\n                p: 2,\r\n                minWidth: 300,\r\n                justifyContent: 'center',\r\n            }}>\r\n                <Stack direction=\"row\"\r\n                    justifyContent=\"flex-end\"\r\n                    spacing={32}>\r\n                    <ColorButton onClick={GetQuotes}>\r\n                        Next Quote\r\n                    </ColorButton>\r\n                </Stack>\r\n                <QuoteStack >\r\n                    <ItemQuote variant='contained'>\r\n                        {quote}\r\n                    </ItemQuote>\r\n                    <Item variant='contained'>\r\n                        {author}\r\n                    </Item>\r\n                </QuoteStack>\r\n            </Box>\r\n            <NavButtons />\r\n        </React.Fragment>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}