{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import*as React from'react';import{Stack,Box,Button,Paper,styled,Autocomplete,TextField}from'@mui/material';import axios from'axios';import NavButtons from'./NavButtons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Item=styled(Paper)(function(_ref){var theme=_ref.theme;return _objectSpread(_objectSpread({backgroundColor:'oldlace'},theme.typography.body2),{},{padding:theme.spacing(1),fontFamily:'Bitter',textAlign:'left',fontWeight:'bold',color:'darkslategrey',maxWidth:800,minWidth:200});});var ColorButton=styled(Button)(function(_ref2){var theme=_ref2.theme;return{color:'black',font:'bold',fontSize:'1.5rem',fontWeight:'bold',fontFamily:'Bitter',backgroundColor:\"seagreen\",'&:hover':{backgroundColor:\"darkgreen\"}};});var CustomAutoComplete=styled(Autocomplete)(function(_ref3){var theme=_ref3.theme;return{color:\"cyan\",backgroundColor:\"azure\",maxWidth:575,minWidth:300,fontWeight:'bold',fontFamily:'Caveat','&:hover':{backgroundColor:\"lightgreen\"}};});function RandomNum(length){var min=0;var max=length;var rand=Math.floor(Math.random()*(max-min))+min;return rand;}export default function SelectVariants(){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),choice=_React$useState2[0],setChoice=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),quote=_React$useState4[0],setQuote=_React$useState4[1];var _React$useState5=React.useState([]),_React$useState6=_slicedToArray(_React$useState5,2),author=_React$useState6[0],setAuthor=_React$useState6[1];// eslint-disable-next-line\nvar handleChange=function handleChange(event){setChoice(event.target.value);GetQuoteByCategory(event.target.value);};var handleClick=function handleClick(event){GetQuoteByCategory(choice);};var changeGreeting=function changeGreeting(){if(choice!==''){return author;}return\"Choose a Category\";};function GetQuoteByCategory(_x){return _GetQuoteByCategory.apply(this,arguments);}function _GetQuoteByCategory(){_GetQuoteByCategory=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var category,quoteList,authorList,i,num;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/quote/category/\".concat(event));case 2:category=_context.sent;// eslint-disable-next-line\nquoteList=new Array();// eslint-disable-next-line\nauthorList=new Array();for(i=0;i<category.data.length;i++){quoteList.push(category.data[i].quoted);authorList.push(category.data[i].quoteAuthor);}num=RandomNum(category.data.length);setAuthor(authorList[num]);setQuote(\"\\\"\"+quoteList[num]+\"\\\"\");case 9:case\"end\":return _context.stop();}}},_callee);}));return _GetQuoteByCategory.apply(this,arguments);}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Box,{sx:{boxShadow:5,borderRadius:10,p:2,m:'auto',maxWidth:800,minWidth:200,justifyContent:'center'},children:[/*#__PURE__*/_jsxs(Stack,{spacing:2,direction:\"row\",justifyContent:\"flex-start\",children:[/*#__PURE__*/_jsx(CustomAutoComplete,{value:choice,onChange:function onChange(event,newChoice){setChoice(newChoice);GetQuoteByCategory(newChoice);},isOptionEqualToValue:function isOptionEqualToValue(option,value){return option.value===value.value;},selectOnFocus:true,options:qCategory.sort(),renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Category\",variant:\"standard\"}));}}),/*#__PURE__*/_jsx(ColorButton,{onClick:handleClick,sx:{p:0},children:\" Next Quote\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(Item,{variant:\"contained\",sx:{fontSize:20},children:changeGreeting()}),/*#__PURE__*/_jsx(Item,{variant:\"contained\",sx:{fontFamily:'Caveat',color:'darkslategrey',fontSize:40,p:0},children:quote})]}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"space-evenly\",alignItems:\"center\",spacing:5,children:NavButtons('category')})]})});}var qCategory=['life','love','inspiration','humor','wildcard','soul','truth','poetry','wisdom','friendship','happiness','books','romance','writing','success','hope','arts','education','motivation','death','faith','philosophy','mind','god','funny','relationship','religion','science','knowledge','quotes','purpose','positive','dad'];","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Component/CategorySelect.js"],"names":["React","Stack","Box","Button","Paper","styled","Autocomplete","TextField","axios","NavButtons","Item","theme","backgroundColor","typography","body2","padding","spacing","fontFamily","textAlign","fontWeight","color","maxWidth","minWidth","ColorButton","font","fontSize","CustomAutoComplete","RandomNum","length","min","max","rand","Math","floor","random","SelectVariants","useState","choice","setChoice","quote","setQuote","author","setAuthor","handleChange","event","target","value","GetQuoteByCategory","handleClick","changeGreeting","get","category","quoteList","Array","authorList","i","data","push","quoted","quoteAuthor","num","boxShadow","borderRadius","p","m","justifyContent","newChoice","option","qCategory","sort","params"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Stack, Box, Button, Paper, styled, Autocomplete, TextField } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nimport NavButtons from './NavButtons';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: 'oldlace',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    fontFamily: 'Bitter',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n    color: 'darkslategrey',\r\n    maxWidth: 800,\r\n    minWidth: 200,\r\n}));\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: 'black',\r\n    font: 'bold',\r\n    fontSize: '1.5rem',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Bitter',\r\n    backgroundColor: \"seagreen\",\r\n    '&:hover': {\r\n        backgroundColor: \"darkgreen\",\r\n    },\r\n}));\r\n\r\nconst CustomAutoComplete = styled(Autocomplete)(({ theme }) => ({\r\n    color: \"cyan\",\r\n    backgroundColor: \"azure\",\r\n    maxWidth: 575,\r\n    minWidth: 300,\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Caveat',\r\n    '&:hover': {\r\n        backgroundColor: \"lightgreen\",\r\n    },\r\n}));\r\nfunction RandomNum(length) {\r\n    const min = 0;\r\n    const max = length;\r\n    const rand = Math.floor(Math.random() * (max - min)) + min;\r\n    return (rand);\r\n}\r\nexport default function SelectVariants() {\r\n    const [choice, setChoice] = React.useState('');\r\n    const [quote, setQuote] = React.useState([]);\r\n    const [author, setAuthor] = React.useState([]);\r\n    // eslint-disable-next-line\r\n    const handleChange = (event) => {\r\n        setChoice(event.target.value);\r\n        GetQuoteByCategory(event.target.value);\r\n    };\r\n    const handleClick = (event) => {\r\n        GetQuoteByCategory(choice);\r\n    };\r\n    const changeGreeting = () => {\r\n        if (choice !== '') {\r\n            return author;\r\n        }\r\n        return \"Choose a Category\";\r\n    }\r\n    async function GetQuoteByCategory(event) {\r\n        let category = await axios.get(`/api/quote/category/${event}`);\r\n        // eslint-disable-next-line\r\n        const quoteList = new Array();\r\n        // eslint-disable-next-line\r\n        const authorList = new Array();\r\n        for (let i = 0; i < category.data.length; i++) {\r\n            quoteList.push(category.data[i].quoted);\r\n            authorList.push(category.data[i].quoteAuthor);\r\n        }\r\n        const num = RandomNum(category.data.length);\r\n        setAuthor(authorList[num]);\r\n        setQuote(\"\\\"\" + quoteList[num] + \"\\\"\");\r\n\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <Box sx={{\r\n                boxShadow: 5,\r\n                borderRadius: 10,\r\n                p: 2,\r\n                m: 'auto',\r\n                maxWidth: 800,\r\n                minWidth: 200,\r\n                justifyContent: 'center',\r\n            }}>\r\n                <Stack spacing={2} direction=\"row\" justifyContent=\"flex-start\" >\r\n                    <CustomAutoComplete\r\n                        value={choice}\r\n                        onChange={(event, newChoice) => {\r\n                            setChoice(newChoice);\r\n                            GetQuoteByCategory(newChoice);\r\n                        }}\r\n                        isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                        selectOnFocus\r\n                        options={qCategory.sort()}\r\n                        renderInput={(params) => <TextField {...params} label=\"Category\" variant=\"standard\" />} />\r\n                    <ColorButton onClick={handleClick} sx={{ p: 0 }}> Next Quote</ColorButton>\r\n                </Stack>\r\n                <br />\r\n                <Item>\r\n                    <Item variant='contained' sx={{ fontSize: 20 }}>{changeGreeting()}</Item>\r\n                    <Item variant='contained' sx={{ fontFamily: 'Caveat', color: 'darkslategrey', fontSize: 40, p: 0 }}>{quote}</Item>\r\n                </Item>\r\n                <Stack direction=\"row\"\r\n                    justifyContent=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                    spacing={5}>\r\n                    {NavButtons('category')}\r\n                </Stack>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nconst qCategory = [\r\n    'life',\r\n    'love',\r\n    'inspiration',\r\n    'humor',\r\n    'wildcard',\r\n    'soul',\r\n    'truth',\r\n    'poetry',\r\n    'wisdom',\r\n    'friendship',\r\n    'happiness',\r\n    'books',\r\n    'romance',\r\n    'writing',\r\n    'success',\r\n    'hope',\r\n    'arts',\r\n    'education',\r\n    'motivation',\r\n    'death',\r\n    'faith',\r\n    'philosophy',\r\n    'mind',\r\n    'god',\r\n    'funny',\r\n    'relationship',\r\n    'religion',\r\n    'science',\r\n    'knowledge',\r\n    'quotes',\r\n    'purpose',\r\n    'positive',\r\n    'dad',\r\n];"]},"metadata":{},"sourceType":"module"}