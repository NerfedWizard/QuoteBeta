{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\src\\\\Component\\\\QuoteManagement\\\\RandomQuote.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Stack } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport RandomNumber from './../../Actions/RandomNumber';\nimport { ColorButton, QuoteItem, MyBox } from '../../Style/styles';\nimport UserService from './../../services/user.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RandomQuote() {\n  _s();\n\n  const [history] = useState([]);\n  const [count, setCount] = useState(history.length);\n  const rand = RandomNumber.getRandomNum();\n  const [quoteData, setQuoteData] = useState({\n    author: '',\n    quoted: '',\n    category: ''\n  });\n  const ident = \"ID\" + rand;\n  let isMounted = false;\n\n  async function GetQuotes() {\n    const identifier = await UserService.getRandomQuote(ident);\n    setQuoteData({\n      author: identifier.data.quoteAuthor,\n      quoted: identifier.data.quoted,\n      category: identifier.data.quoteCategory\n    });\n    history.push({\n      author: identifier.data.quoteAuthor,\n      quoted: identifier.data.quoted,\n      category: identifier.data.quoteCategory\n    });\n    setCount(history.length - 2);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      if (isMounted) {\n        GetQuotes();\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const prevIndex = async () => {\n    if (count > 0) {\n      setCount(count - 1);\n    }\n  };\n\n  const prevQuote = async () => {\n    if (history.length > 1) {\n      // console.log(history.length);\n      setQuoteData(history[count]);\n      prevIndex();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMounted = true, /*#__PURE__*/_jsxDEV(MyBox, {\n      position: \"fixed\",\n      sx: {\n        boxShadow: 5,\n        borderRadius: 10,\n        minWidth: 'responsive'\n      },\n      children: [GetQuotes, /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ColorButton, {\n          onClick: GetQuotes,\n          children: \"Next Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ColorButton, {\n          onClick: prevQuote,\n          children: \"Previous Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QuoteItem, {\n        variant: \"contained\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"author-span\",\n          style: {\n            color: 'slateBlue'\n          },\n          children: quoteData.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), quoteData.quoted, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"category-span\",\n          style: {\n            color: 'coral'\n          },\n          children: quoteData.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RandomQuote, \"/zeCL5UYtHHViiJSN/bJQR8ba1U=\");\n\n_c = RandomQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomQuote\");","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Component/QuoteManagement/RandomQuote.js"],"names":["Box","Stack","React","useState","useEffect","Outlet","RandomNumber","ColorButton","QuoteItem","MyBox","UserService","RandomQuote","history","count","setCount","length","rand","getRandomNum","quoteData","setQuoteData","author","quoted","category","ident","isMounted","GetQuotes","identifier","getRandomQuote","data","quoteAuthor","quoteCategory","push","fetchData","prevIndex","prevQuote","boxShadow","borderRadius","minWidth","color"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,KAAd,QAA2B,eAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,KAAjC,QAA8C,oBAA9C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,OAAD,IAAYT,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,OAAO,CAACG,MAAT,CAAlC;AACA,QAAMC,IAAI,GAAGV,YAAY,CAACW,YAAb,EAAb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC;AAAEiB,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,MAAM,EAAE,EAAtB;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAAD,CAA1C;AACA,QAAMC,KAAK,GAAG,OAAOP,IAArB;AACA,MAAIQ,SAAS,GAAG,KAAhB;;AAEA,iBAAeC,SAAf,GAA2B;AACvB,UAAMC,UAAU,GAAG,MAAMhB,WAAW,CAACiB,cAAZ,CAA2BJ,KAA3B,CAAzB;AACAJ,IAAAA,YAAY,CAAC;AAAEC,MAAAA,MAAM,EAAEM,UAAU,CAACE,IAAX,CAAgBC,WAA1B;AAAuCR,MAAAA,MAAM,EAAEK,UAAU,CAACE,IAAX,CAAgBP,MAA/D;AAAuEC,MAAAA,QAAQ,EAAEI,UAAU,CAACE,IAAX,CAAgBE;AAAjG,KAAD,CAAZ;AACAlB,IAAAA,OAAO,CAACmB,IAAR,CAAa;AACTX,MAAAA,MAAM,EAAEM,UAAU,CAACE,IAAX,CAAgBC,WADf;AAC4BR,MAAAA,MAAM,EAAEK,UAAU,CAACE,IAAX,CAAgBP,MADpD;AAC4DC,MAAAA,QAAQ,EAAEI,UAAU,CAACE,IAAX,CAAgBE;AADtF,KAAb;AAGAhB,IAAAA,QAAQ,CAACF,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAR;AACH;;AACDX,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAe4B,SAAf,GAA2B;AACvB,UAAIR,SAAJ,EAAe;AACXC,QAAAA,SAAS;AACZ;AACJ;;AACDO,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;;AAQA,QAAMC,SAAS,GAAG,YAAY;AAC1B,QAAIpB,KAAK,GAAG,CAAZ,EAAe;AACXC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;AACJ,GAJD;;AAKA,QAAMqB,SAAS,GAAG,YAAY;AAC1B,QAAItB,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACpB;AACAI,MAAAA,YAAY,CAACP,OAAO,CAACC,KAAD,CAAR,CAAZ;AACAoB,MAAAA,SAAS;AACZ;AACJ,GAND;;AAOA,sBACI;AAAA,eACKT,SAAS,GAAG,IADjB,eAEI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAwB,MAAA,EAAE,EAAE;AACxBW,QAAAA,SAAS,EAAE,CADa;AAExBC,QAAAA,YAAY,EAAE,EAFU;AAGxBC,QAAAA,QAAQ,EAAE;AAHc,OAA5B;AAAA,iBAKKZ,SALL,eAMI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AACI,QAAA,cAAc,EAAC,QADnB;AAAA,gCAGI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,WAAD;AAAa,UAAA,OAAO,EAAES,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAaI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,WAAnB;AAAA,gCACI;AAAM,UAAA,KAAK,EAAC,aAAZ;AAA0B,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAjC;AAAA,oBAA0DpB,SAAS,CAACE;AAApE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKF,SAAS,CAACG,MAHf,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAM,UAAA,KAAK,EAAC,eAAZ;AAA4B,UAAA,KAAK,EAAE;AAAEiB,YAAAA,KAAK,EAAE;AAAT,WAAnC;AAAA,oBACKpB,SAAS,CAACI;AADf;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eA4BI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA,kBADJ;AAgCH;;GApEuBX,W;;KAAAA,W","sourcesContent":["import { Box, Stack } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport RandomNumber from './../../Actions/RandomNumber';\r\nimport { ColorButton, QuoteItem, MyBox } from '../../Style/styles';\r\nimport UserService from './../../services/user.service';\r\n\r\nexport default function RandomQuote() {\r\n    const [history] = useState([]);\r\n    const [count, setCount] = useState(history.length);\r\n    const rand = RandomNumber.getRandomNum();\r\n    const [quoteData, setQuoteData] = useState({ author: '', quoted: '', category: '' });\r\n    const ident = \"ID\" + rand;\r\n    let isMounted = false;\r\n\r\n    async function GetQuotes() {\r\n        const identifier = await UserService.getRandomQuote(ident);\r\n        setQuoteData({ author: identifier.data.quoteAuthor, quoted: identifier.data.quoted, category: identifier.data.quoteCategory });\r\n        history.push({\r\n            author: identifier.data.quoteAuthor, quoted: identifier.data.quoted, category: identifier.data.quoteCategory\r\n        });\r\n        setCount(history.length - 2);\r\n    }\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (isMounted) {\r\n                GetQuotes();\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    const prevIndex = async () => {\r\n        if (count > 0) {\r\n            setCount(count - 1);\r\n        }\r\n    }\r\n    const prevQuote = async () => {\r\n        if (history.length > 1) {\r\n            // console.log(history.length);\r\n            setQuoteData(history[count]);\r\n            prevIndex();\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {isMounted = true}\r\n            <MyBox position='fixed' sx={{\r\n                boxShadow: 5,\r\n                borderRadius: 10,\r\n                minWidth: 'responsive',\r\n            }}>\r\n                {GetQuotes}\r\n                <Stack direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <ColorButton onClick={GetQuotes}>Next Quote</ColorButton>\r\n                    <ColorButton onClick={prevQuote}>Previous Quote</ColorButton>\r\n                </Stack>\r\n                {/* <QuoteItem> */}\r\n                <QuoteItem variant='contained'>\r\n                    <span class='author-span' style={{ color: 'slateBlue' }}>{quoteData.author}</span>\r\n                    <br />\r\n                    {quoteData.quoted}\r\n                    <br />\r\n                    <span class='category-span' style={{ color: 'coral' }}>\r\n                        {quoteData.category}\r\n                    </span>\r\n                </QuoteItem>\r\n                {/* <QuoteItem variant='contained' sx={{ fontFamily: 'Caveat', fontSize: '2.5rem', p: 0 }}>{quoteData.quoted}</QuoteItem>\r\n                    <QuoteItem variant='contained' sx={{ color: 'lightpink', fontSize: '1.5rem' }}>{quoteData.category}</QuoteItem> */}\r\n                {/* </QuoteItem> */}\r\n            </MyBox>\r\n            <Outlet />\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}