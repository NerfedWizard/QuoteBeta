{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Box, Container, CssBaseline, Paper, styled } from '@mui/material';\nimport SelectVariants from './Component/CategorySelect';\nimport RandomQuote from './Component/RandomQuote'; // import Nav Buttons from './Component/NavButtons';\n\nimport AuthorSelect from './Component/AuthorSelect';\nimport './App.css';\nimport Landing from './Component/Landing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: 'rgba(86, 11, 184, 0.0)',\n    ...theme.typography.body2,\n    padding: theme.spacing(0.5),\n    position: 'relative',\n    justifyContent: 'center',\n    textAlign: 'center',\n    elevation: 5,\n    fontFamily: 'Hurricane',\n    fontSize: 65,\n    square: false,\n    color: 'antiquewhite'\n  };\n}); // const FullscreenBox = styled(Box)(({ theme }) => ({\n//     display: 'flex',\n// }));\n\n_c = Item;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stars\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twinkling\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            classname: \"clouds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      style: {\n        height: '100vh',\n        margin: 0,\n        padding: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            variant: \"contained\",\n            children: \"It's Time For Quotes.....\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/random\",\n              element: /*#__PURE__*/_jsxDEV(RandomQuote, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/category\",\n              element: /*#__PURE__*/_jsxDEV(SelectVariants, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/author\",\n              element: /*#__PURE__*/_jsxDEV(AuthorSelect, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/App.js"],"names":["React","BrowserRouter","Router","Route","Routes","Box","Container","CssBaseline","Paper","styled","SelectVariants","RandomQuote","AuthorSelect","Landing","Item","theme","backgroundColor","typography","body2","padding","spacing","position","justifyContent","textAlign","elevation","fontFamily","fontSize","square","color","App","height","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { Box, Container, CssBaseline, Paper, styled } from '@mui/material';\r\nimport SelectVariants from './Component/CategorySelect';\r\nimport RandomQuote from './Component/RandomQuote';\r\n// import Nav Buttons from './Component/NavButtons';\r\nimport AuthorSelect from './Component/AuthorSelect';\r\nimport './App.css';\r\nimport Landing from './Component/Landing';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: 'rgba(86, 11, 184, 0.0)',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(0.5),\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    elevation: 5,\r\n    fontFamily: 'Hurricane',\r\n    fontSize: 65,\r\n    square: false,\r\n    color: 'antiquewhite',\r\n}));\r\n// const FullscreenBox = styled(Box)(({ theme }) => ({\r\n//     display: 'flex',\r\n// }));\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"background-container\">\r\n                {/* <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1231630/moon2.png\" alt=\"\"> */}\r\n                <div className=\"stars\">\r\n                    <div className=\"twinkling\">\r\n                        <div classname=\"clouds\"></div></div></div></div>\r\n\r\n            <Box display='flex' style={{ height: '100vh', margin: 0, padding: 0 }}>\r\n\r\n                <Router>\r\n                    <Container >\r\n                        {/* <CssBaseline /> */}\r\n\r\n                        <Item variant='contained'>\r\n                            It's Time For Quotes.....\r\n                        </Item>\r\n                        <Routes>\r\n                            <Route exact path='/' element={<Landing />} />\r\n                            <Route exact path='/random' element={<RandomQuote />} />\r\n                            <Route exact path='/category' element={<SelectVariants />} />\r\n                            <Route exact path='/author' element={<AuthorSelect />} />\r\n                        </Routes>\r\n                    </Container>\r\n                </Router>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}