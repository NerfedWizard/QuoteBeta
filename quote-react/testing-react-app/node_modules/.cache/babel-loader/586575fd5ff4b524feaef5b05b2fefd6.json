{"ast":null,"code":"import axios from\"axios\";import authHeader from\"./auth-header\";var API_URL=\"api/quote/\";var getQuoteByAuthor=function getQuoteByAuthor(author){return axios.get(API_URL+\"author/\".concat(author),{headers:authHeader()});};var getRandomQuote=function getRandomQuote(identifier){return axios.get(API_URL+\"\".concat(identifier),{headers:authHeader()});};var getQuoteByCategory=function getQuoteByCategory(category){return axios.get(API_URL+\"category/\".concat(category),{headers:authHeader()});};// const getAdminBoard = () => {\n//     return axios.get(API_URL + \"admin\", { headers: authHeader() });\n// };\nvar UserService={getQuoteByAuthor:getQuoteByAuthor,getQuoteByCategory:getQuoteByCategory,getRandomQuote:getRandomQuote};export default UserService;","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/services/user.service.js"],"names":["axios","authHeader","API_URL","getQuoteByAuthor","author","get","headers","getRandomQuote","identifier","getQuoteByCategory","category","UserService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAEA,GAAMC,CAAAA,OAAO,CAAG,YAAhB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,MAAD,CAAY,CACjC,MAAOJ,CAAAA,KAAK,CAACK,GAAN,CAAUH,OAAO,kBAAaE,MAAb,CAAjB,CAAwC,CAAEE,OAAO,CAAEL,UAAU,EAArB,CAAxC,CAAP,CACH,CAFD,CAIA,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CACnC,MAAOR,CAAAA,KAAK,CAACK,GAAN,CAAUH,OAAO,WAAMM,UAAN,CAAjB,CAAqC,CAAEF,OAAO,CAAEL,UAAU,EAArB,CAArC,CAAP,CACH,CAFD,CAIA,GAAMQ,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAOV,CAAAA,KAAK,CAACK,GAAN,CAAUH,OAAO,oBAAeQ,QAAf,CAAjB,CAA4C,CAAEJ,OAAO,CAAEL,UAAU,EAArB,CAA5C,CAAP,CACH,CAFD,CAIA;AACA;AACA;AAEA,GAAMU,CAAAA,WAAW,CAAG,CAChBR,gBAAgB,CAAhBA,gBADgB,CAEhBM,kBAAkB,CAAlBA,kBAFgB,CAGhBF,cAAc,CAAdA,cAHgB,CAApB,CAMA,cAAeI,CAAAA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"api/quote/\";\r\n\r\nconst getQuoteByAuthor = (author) => {\r\n    return axios.get(API_URL + `author/${author}`, { headers: authHeader() });\r\n};\r\n\r\nconst getRandomQuote = (identifier) => {\r\n    return axios.get(API_URL + `${identifier}`, { headers: authHeader() });\r\n};\r\n\r\nconst getQuoteByCategory = (category) => {\r\n    return axios.get(API_URL + `category/${category}`, { headers: authHeader() });\r\n};\r\n\r\n// const getAdminBoard = () => {\r\n//     return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n// };\r\n\r\nconst UserService = {\r\n    getQuoteByAuthor,\r\n    getQuoteByCategory,\r\n    getRandomQuote,\r\n};\r\n\r\nexport default UserService;"]},"metadata":{},"sourceType":"module"}