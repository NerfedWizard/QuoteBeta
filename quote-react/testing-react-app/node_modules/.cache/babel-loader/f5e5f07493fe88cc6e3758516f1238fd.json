{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loeln\\\\OneDrive\\\\Desktop\\\\QuoteBeta\\\\quote-react\\\\testing-react-app\\\\src\\\\Component\\\\QuoteManagement\\\\RandomQuote.js\",\n    _s = $RefreshSig$();\n\n// import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\"; // import { connect } from \"react-redux\";\n\nimport { Box, Button, Paper, styled, Stack } from '@mui/material';\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport NavButtons from '../Layout/NavButtons';\nimport RandomNumber from '../../Actions/RandomNumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: 'oldlace',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    fontFamily: 'Bitter',\n    textAlign: 'left',\n    color: 'darkslategrey',\n    fontWeight: 'bold',\n    maxWidth: 800,\n    minWidth: 200\n  };\n});\n_c = Item;\nconst ColorButton = styled(Button)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    color: 'black',\n    font: 'bold',\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    fontFamily: 'Bitter',\n    backgroundColor: \"seagreen\",\n    '&:hover': {\n      backgroundColor: \"darkgreen\"\n    }\n  };\n});\n_c2 = ColorButton;\nexport default function RandomQuote() {\n  _s();\n\n  const axios = require('axios');\n\n  const [quote, setQuote] = useState(['Welcome to the Quote Machine']);\n  const [author, setAuthor] = useState(['By Loel Nelson']);\n  const [category, setCategory] = useState([]);\n  const rand = RandomNumber();\n\n  async function GetQuotes() {\n    const ident = \"ID\" + rand;\n    let identifier = await axios.get(`/api/quote/${ident}`); // eslint-disable-next-line\n\n    const quoteList = new Array();\n    quoteList.push(identifier.data.quoteAuthor);\n    quoteList.push(identifier.data.quoted);\n    quoteList.push(identifier.data.quoteCategory);\n    displayQuote(\"\\\"\" + quoteList[1] + \"\\\"\", quoteList[0], quoteList[2]);\n  }\n\n  function displayQuote(theQuote, theAuthor, theCategory) {\n    setQuote(theQuote);\n    setAuthor(theAuthor);\n    setCategory(theCategory);\n  }\n\n  const {\n    quotes\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        boxShadow: 5,\n        borderRadius: 10,\n        p: 2,\n        m: 'auto',\n        maxWidth: 800,\n        minWidth: 200,\n        justifyContent: 'center'\n      },\n      children: [GetQuotes, /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"flex-end\",\n        spacing: 32,\n        children: /*#__PURE__*/_jsxDEV(ColorButton, {\n          onClick: GetQuotes,\n          children: \"Next Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          variant: \"contained\",\n          sx: {\n            color: 'slateblue',\n            fontSize: 28\n          },\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          variant: \"contained\",\n          sx: {\n            fontFamily: 'Caveat',\n            fontSize: 40,\n            p: 0\n          },\n          children: quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          variant: \"contained\",\n          sx: {\n            color: 'lightpink',\n            fontSize: 20\n          },\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), NavButtons('random')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(RandomQuote, \"MDaC2MKVkonTQ5UqEVdAAhxUW2E=\");\n\n_c3 = RandomQuote;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ColorButton\");\n$RefreshReg$(_c3, \"RandomQuote\");","map":{"version":3,"sources":["C:/Users/loeln/OneDrive/Desktop/QuoteBeta/quote-react/testing-react-app/src/Component/QuoteManagement/RandomQuote.js"],"names":["React","Component","Box","Button","Paper","styled","Stack","useState","Link","NavButtons","RandomNumber","Item","theme","backgroundColor","typography","body2","padding","spacing","fontFamily","textAlign","color","fontWeight","maxWidth","minWidth","ColorButton","font","fontSize","RandomQuote","axios","require","quote","setQuote","author","setAuthor","category","setCategory","rand","GetQuotes","ident","identifier","get","quoteList","Array","push","data","quoteAuthor","quoted","quoteCategory","displayQuote","theQuote","theAuthor","theCategory","quotes","props","boxShadow","borderRadius","p","m","justifyContent"],"mappings":"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","sourcesContent":["// import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\nimport { Box, Button, Paper, styled, Stack } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport NavButtons from '../Layout/NavButtons';\r\nimport RandomNumber from '../../Actions/RandomNumber';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: 'oldlace',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    fontFamily: 'Bitter',\r\n    textAlign: 'left',\r\n    color: 'darkslategrey',\r\n    fontWeight: 'bold',\r\n    maxWidth: 800,\r\n    minWidth: 200,\r\n}));\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: 'black',\r\n    font: 'bold',\r\n    fontSize: '1.5rem',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Bitter',\r\n    backgroundColor: \"seagreen\",\r\n    '&:hover': {\r\n        backgroundColor: \"darkgreen\",\r\n    },\r\n}));\r\n\r\nexport default function RandomQuote() {\r\n    const axios = require('axios');\r\n    const [quote, setQuote] = useState(['Welcome to the Quote Machine']);\r\n    const [author, setAuthor] = useState(['By Loel Nelson']);\r\n    const [category, setCategory] = useState([]);\r\n    const rand = RandomNumber();\r\n\r\n    async function GetQuotes() {\r\n\r\n        const ident = \"ID\" + rand;\r\n        let identifier = await axios.get(`/api/quote/${ident}`);\r\n        // eslint-disable-next-line\r\n        const quoteList = new Array();\r\n        quoteList.push(identifier.data.quoteAuthor);\r\n        quoteList.push(identifier.data.quoted);\r\n        quoteList.push(identifier.data.quoteCategory);\r\n        displayQuote(\"\\\"\" + quoteList[1] + \"\\\"\", quoteList[0], quoteList[2]);\r\n\r\n    }\r\n    function displayQuote(theQuote, theAuthor, theCategory) {\r\n        setQuote(theQuote);\r\n        setAuthor(theAuthor);\r\n        setCategory(theCategory);\r\n    }\r\n    const { quotes } = this.props;\r\n    return (\r\n        <>\r\n\r\n            <Box sx={{\r\n                boxShadow: 5,\r\n                borderRadius: 10,\r\n                p: 2,\r\n                m: 'auto',\r\n                maxWidth: 800,\r\n                minWidth: 200,\r\n                justifyContent: 'center',\r\n            }}>\r\n                {GetQuotes}\r\n                <Stack direction=\"row\"\r\n                    justifyContent=\"flex-end\"\r\n                    spacing={32}>\r\n                    <ColorButton onClick={GetQuotes}>Next Quote</ColorButton>\r\n                </Stack>\r\n                <Item>\r\n                    <Item variant='contained' sx={{ color: 'slateblue', fontSize: 28 }}>{author}</Item>\r\n                    <Item variant='contained' sx={{ fontFamily: 'Caveat', fontSize: 40, p: 0 }}>{quote}</Item>\r\n                    <Item variant='contained' sx={{ color: 'lightpink', fontSize: 20 }}>{category}</Item>\r\n                </Item>\r\n                {NavButtons('random')}\r\n            </Box>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}